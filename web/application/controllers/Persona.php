<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Persona extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Persona_model');
    } 

    /*
     * Listing of persona
     */
    function index()
    {
        $data['persona'] = $this->Persona_model->get_all_persona();
        
        $data['_view'] = 'persona/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new persona
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('telefono','Telefono','required|max_length[12]');
		$this->form_validation->set_rules('persona_perfil_id','Persona Perfil Id','required');
		$this->form_validation->set_rules('nombres','Nombres','required|max_length[60]');
		$this->form_validation->set_rules('apellido_paterno','Apellido Paterno','required|max_length[30]');
		$this->form_validation->set_rules('apellido_materno','Apellido Materno','max_length[30]');
		$this->form_validation->set_rules('identificacion','Identificacion','required|max_length[12]');
		$this->form_validation->set_rules('saldo_disponible','Saldo Disponible','required|numeric');
		$this->form_validation->set_rules('token_culqi','Token Culqi','max_length[250]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'telefono' => $this->input->post('telefono'),
				'persona_perfil_id' => $this->input->post('persona_perfil_id'),
				'nombres' => $this->input->post('nombres'),
				'apellido_paterno' => $this->input->post('apellido_paterno'),
				'apellido_materno' => $this->input->post('apellido_materno'),
				'identificacion' => $this->input->post('identificacion'),
				'saldo_disponible' => $this->input->post('saldo_disponible'),
				'token_culqi' => $this->input->post('token_culqi'),
				'estado' => $this->input->post('estado'),
            );
            
            $persona_id = $this->Persona_model->add_persona($params);
            redirect('persona/index');
        }
        else
        {
			$this->load->model('Persona_perfil_model');
			$data['all_persona_perfil'] = $this->Persona_perfil_model->get_all_persona_perfil();
            
            $data['_view'] = 'persona/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a persona
     */
    function edit($id)
    {   
        // check if the persona exists before trying to edit it
        $data['persona'] = $this->Persona_model->get_persona($id);
        
        if(isset($data['persona']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('telefono','Telefono','required|max_length[12]');
			$this->form_validation->set_rules('persona_perfil_id','Persona Perfil Id','required');
			$this->form_validation->set_rules('nombres','Nombres','required|max_length[60]');
			$this->form_validation->set_rules('apellido_paterno','Apellido Paterno','required|max_length[30]');
			$this->form_validation->set_rules('apellido_materno','Apellido Materno','max_length[30]');
			$this->form_validation->set_rules('identificacion','Identificacion','required|max_length[12]');
			$this->form_validation->set_rules('saldo_disponible','Saldo Disponible','required|numeric');
			$this->form_validation->set_rules('token_culqi','Token Culqi','max_length[250]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'telefono' => $this->input->post('telefono'),
					'persona_perfil_id' => $this->input->post('persona_perfil_id'),
					'nombres' => $this->input->post('nombres'),
					'apellido_paterno' => $this->input->post('apellido_paterno'),
					'apellido_materno' => $this->input->post('apellido_materno'),
					'identificacion' => $this->input->post('identificacion'),
					'saldo_disponible' => $this->input->post('saldo_disponible'),
					'token_culqi' => $this->input->post('token_culqi'),
					'estado' => $this->input->post('estado'),
                );

                $this->Persona_model->update_persona($id,$params);            
                redirect('persona/index');
            }
            else
            {
				$this->load->model('Persona_perfil_model');
				$data['all_persona_perfil'] = $this->Persona_perfil_model->get_all_persona_perfil();

                $data['_view'] = 'persona/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The persona you are trying to edit does not exist.');
    } 

    /*
     * Deleting persona
     */
    function remove($id)
    {
        $persona = $this->Persona_model->get_persona($id);

        // check if the persona exists before trying to delete it
        if(isset($persona['id']))
        {
            $this->Persona_model->delete_persona($id);
            redirect('persona/index');
        }
        else
            show_error('The persona you are trying to delete does not exist.');
    }
    
}
